@using StoreManagement.Data.GeneralHelper
@model StoreManagement.Data.RequestModel.ContentDetailViewModel
@{
    var store = Model.SStore;
    String title = GeneralHelper.Capitalize(GeneralHelper.TruncateAtWord(Model.Content.Name, 55));
    if (title.Length + store.Name.Length + 3 < 55)
    {
        title = string.Format("{0} - {1}", title, store.Name);
    }
    ViewBag.Title = title;
    var news = Model.SContent;
    var images = Model.SContent.ContentFiles;
    var categories = Model.SCategories;
    ViewBag.Description = string.Format("{0} ", GeneralHelper.GetDescription(news.Description,150).TruncateAtSentence(150));
}


@foreach (var item in categories)
{        
    @Html.ActionLink(item.Name, "Category", "Categories", new { id = String.Format("{0}-{1}", GeneralHelper.GetUrlSeoString(item.Name), item.Id) }, new { @class = "btn btn-lg btn-link" })
}

@{
    
    for (int i = 0; i < images.Count; i++)
    {
        var m = images.ToList()[i];

    <div class="item @String.Format("{0}", (i == 0 ? "active" : ""))">
        <a href="#">
            <img src="@Url.Action("FetchImage", "Images", new { id = m.FileManager.GoogleImageId, size = "", contentType = m.FileManager.ContentType })" style="width: 100px; height: 100px;" alt="">
        </a>
    </div>
    }

}



@news.Name


@Html.Raw(news.Description)
